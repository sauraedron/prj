Index: source/blender/collada/ExtraHandler.cpp
===================================================================
--- source/blender/collada/ExtraHandler.cpp	(revision 60385)
+++ source/blender/collada/ExtraHandler.cpp	(working copy)
@@ -40,26 +40,41 @@
 
 bool ExtraHandler::elementBegin(const char *elementName, const char **attributes)
 {
+    //if(ExtraType=="blender") {
 	// \todo attribute handling for profile tags
 	currentElement = std::string(elementName);
 	//addToSidTree(attributes[0], attributes[1]);
+     //}
+    std::cout<<std::endl<<"$$$$Extratype "<<ExtraType<<"\n";
+    std::cout<<"<"<<currentElement<<">";
 	return true;
+
 }
 
 bool ExtraHandler::elementEnd(const char *elementName)
 {
+    std::cout<<"\n</"<<currentElement<<">"<<std::endl;
 	return true;
 }
 
 bool ExtraHandler::textData(const char *text, size_t textLength)
 {
+    if(ExtraType!="FCOLLADA"){
 	char buf[1024];
-	
+    std::cout<<"text "<<text;
 	if (currentElement.length() == 0 || currentExtraTags == 0) return false;
 	
 	BLI_strncpy(buf, text, textLength + 1);
 	currentExtraTags->addTag(currentElement, std::string(buf));
-	return true;
+    std::cout<<"buf "<<buf;
+
+    }
+    else if (ExtraType=="FCOLLADA")
+            {
+        std::cout<<"TEXTDATA"<<text;
+      //  return true;
+            }
+    return true;
 }
 
 bool ExtraHandler::parseElement(
@@ -77,8 +92,9 @@
         const COLLADAFW::UniqueId& uniqueId,
 		COLLADAFW::Object* object)
 {
-	if (BLI_strcaseeq(profileName, "blender")) {
-		//printf("In parseElement for supported profile %s for id %s\n", profileName, uniqueId.toAscii().c_str());
+    if (BLI_strcaseeq(profileName, "blender")) {
+            ExtraType="blender";
+        //printf("In parseElement for supported profile %s for id %s\n", profileName, uniqueId.toAscii().c_str());
 		currentUid = uniqueId;
 		ExtraTags *et = dimp->getExtraTags(uniqueId);
 		if (!et) {
@@ -89,6 +105,19 @@
 		currentExtraTags = et;
 		return true;
 	}
+    else if (BLI_strcaseeq(profileName, "FCOLLADA")) {
+        ExtraType="FCOLLADA";
+    //printf("In parseElement for supported profile %s for id %s\n", profileName, uniqueId.toAscii().c_str());
+    currentUid = uniqueId;
+    ExtraTags *et = dimp->getExtraTags(uniqueId);
+    if (!et) {
+        et = new ExtraTags(std::string(profileName));
+        dimp->addExtraTags(uniqueId, et);
+
+    }
+    currentExtraTags = et;
+    return true;
+}
 	//printf("In parseElement for unsupported profile %s for id %s\n", profileName, uniqueId.toAscii().c_str());
 	return false;
 }
Index: source/blender/collada/ExtraHandler.h
===================================================================
--- source/blender/collada/ExtraHandler.h	(revision 60385)
+++ source/blender/collada/ExtraHandler.h	(working copy)
@@ -82,5 +82,6 @@
 	COLLADAFW::UniqueId currentUid;
 	ExtraTags* currentExtraTags;
 	std::string currentElement;
+    std::string ExtraType;
 };
 
